@page "/dividendEventDisplay"
@using Stocks.Core.DividendDisplay;

@inject ICalendarGenerator CalendarGenerator
@inject IJSRuntime JSRuntime;

@if (_month is null)
{
    <div id="header">
        <h1 class="header">Loading...</h1>
    </div>
}
else
{
    <div id="header">
        <h1 class="header">@CalendarGenerator.Today.ToString("y")</h1>
        <h5 class="float">Ex dividend <span class="exDate" /></h5>
        <h5 class="float">Pay date <span class="payDate"/></h5>
        <h5 class="float">
            <label for="divdendYield">Divdend yield</label>
            <input @bind=_minDividendYield style="width: 200px;" type="range" name="divdendYield" min="0" max="@_maxDividendYield">
        </h5>
    </div>

    <table width="100%">
        @foreach (var week in _month)
        {
            <tr>
                @foreach (var day in week)
                {
                    <div class="@day.CardCss">
                        <div class="@day.HeaderCss">
                            <h4>@day.DayOfWeek</h4><p>@day.Day</p>
                        </div>
                        <div class="@day.ContainerCss" width="100%">
                            @foreach (var item in day.DisplayDividendHistories)
                            {
                                <div class="dividendTooltip" style="float:left;">
                                    &nbsp;
                                    <span class="@item.Css" />&nbsp;
                                    <a style="text-align:left;" href="/stockdetail/@item.Ticker">@item.Ticker</a>
                                    <div class="tooltiptext" >
                                        <div class="displayDay">
                                            <h4>@day.Month</h4>
                                            <h2>@day.Day</h2>
                                        </div>
                                        <div class="stockName">
                                            <h3>@item.Ticker</h3>
                                            <h4>@item.Name</h4>
                                        </div>
                                        <div class="stockdetail">
                                            @foreach (var detail in item.Details)
                                            {
                                                <div> @detail.Title</div><h5>@detail.Value</h5><br/>
                                            }  
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            </tr>
        }
    </table>
}

@code {
    private int _minDividendYield;
    private double _maxDividendYield;

    IEnumerable<IEnumerable<DisplayDay>> _month;

    protected override async Task OnInitializedAsync()
    {
        _month = await CalendarGenerator.GenerateMonthAsync();
        //_maxDividendYield = _month.Max(m => m.Max(d => d.DisplayDividendHistories.Max(dh => dh.Yield)));
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeVoidAsync("setTitle", $"Dividend calendar"); ;
    }
}
