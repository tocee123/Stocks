@page "/dividendEventDisplay"

<h1>@DateTime.Today.ToString("y")</h1>

@if (_month != null)
{
    foreach (var week in _month)
    {
        foreach (var day in week)
        {
            <div class="@GetClassForCard(day)">
                <div class="@GetClassForHeader(day)">
                    <h4>@day.DayOfWeek.ToString().Substring(0,3)</h4><p>@day.Day</p>
                </div>
                <div class="container">
                </div>
            </div>
        }
        <br/>
    }      
}

@code {
    int CurrentMonth = DateTime.Today.Month;

    IEnumerable<IEnumerable<DateTime>> _month;

    private static IEnumerable<DayOfWeek> _weekend = new[] { DayOfWeek.Saturday, DayOfWeek.Sunday };

    private static bool IsWeekend(DateTime date)
    => _weekend.Contains(date.DayOfWeek);

    private string GetClassForCard(DateTime date)
    => IsWeekend(date) ? "cardWeekend" : "card";

    private string GetClassForHeader(DateTime date)
    => IsWeekend(date) ? "headerWeekend" : "header";

    protected override async Task OnInitializedAsync()
    {
        var firstDay = new DateTime(DateTime.Today.Year,DateTime.Today.Month, 1);
        var wholeMonth = Enumerable.Range(0, DateTime.DaysInMonth(firstDay.Year,firstDay.Month)).Select(i => firstDay.AddDays(i));

        var mondays = wholeMonth.Where(d => d.DayOfWeek == DayOfWeek.Monday);

        _month = mondays.Select(d => Enumerable.Range(0, 7).Select(i => d.AddDays(i)));
    }
}
