@page "/dividendEventDisplay"
@using Stocks.Core.DividendDisplay;

@inject ICalendarGenerator CalendarGenerator
<h1 class="header">@CalendarGenerator.Today.ToString("y")</h1>

@if (_month != null)
{
    <table width="100%">        
    @foreach (var week in _month)
    {
        <tr>
            @foreach (var day in week)
            {
                <div class="@day.CardCss">
                    <div class="@day.HeaderCss">
                        <h4>@day.DayOfWeek</h4><p>@day.Day</p>
                    </div>
                    <div class="container">
                        <table class="table table-accordion" style="width:100%">
                        @foreach (var item in day.DisplayDividendHistories)
                        {
                            <tr>
                                <td><a href="/stockdetail/@item.Ticker">@item.Ticker</a></td>
                                <td>@item.Amount.ToDollarDisplay()</td>
                            </tr>
                        }
                        </table>
                    </div>
                </div>
            }
        </tr>
    }
    </table>
}

@code {
    IEnumerable<IEnumerable<DisplayDay>> _month;

    protected override async Task OnInitializedAsync()
    {
        _month = await CalendarGenerator.GenerateMonthAsync();
    }
}
