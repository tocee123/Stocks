@using Stocks.Core.Models;
@using Stocks.Web.HelperClasses.StockFitlers;

@if (_stocksToDisplay.Any())
{
    <table class="table table-striped header-fixed">
        <thead>
            <tr>
                <th width="40%">Stock</th>
                <th>Dividend to price ratio</th>
                <th>Dates</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var stock in _stocksToDisplay)
            {
                <tr>
                    <td>
                        <div>
                            <b>@stock.Ticker</b>
                            <span></span>
                            <a href="/stockdetail/@stock.Ticker">@stock.Name</a>
                            <br />
                            <b>Price:</b> $@stock.Price<br />
                            <b>Current dividend:</b> $@stock.Amount<br />
                            @if (stock.HasSpecial)
                            {
                                <span class="oi oi-check"></span><b>Has special dividend</b>
                            }
                        </div>
                    </td>
                    <td class="@Common.GetCssForDividendToPrice(stock.DividendToPrice)">
                        <div>
                            <b>Ratio: @stock.DividendToPriceDisplay </b><br />
                            <b>Price: </b>$@stock.Price<br />
                            <b>Current dividend: </b>$@stock.Amount
                        </div>
                    </td>
                    <td class="@Common.GetCssForWhenToBuy(stock.WhenToBuy)">
                        <div>
                            <ul>
                                <li>When to buy: @stock.WhenToBuyDisplay</li>
                                <li>When to sell: @stock.WhenToSellDisplay</li>
                            </ul>
                        </div>
                        <div style="@ShouldShowSpecialDates()">
                            <ul>
                                <li>Ex-date: @stock.Exdate</li>
                                <li>Record: date @stock.RecordDate</li>
                                <li>Pay date: @stock.PayDate</li>
                                <li>Declaration date: @stock.DeclarationDate</li>
                            </ul>

                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {

    [Parameter]
    public IEnumerable<StockDividend> Stocks { get; set; }

    [Parameter]
    public EventCallback<IEnumerable<StockDividend>> StocksChanged { get; set; }

    [Parameter]
    public string VisibilitySwitch { get; set; }

    [Parameter]
    public EventCallback<string> VisibilitySwitchChanged { get; set; }

    [Parameter]
    public bool ShowSpecialDates { get; set; }

    [Parameter]
    public EventCallback<bool> ShowSpecialDatesChanged { get; set; }

    [Parameter]
    public string TickerFilter { get; set; }

    [Parameter]
    public EventCallback<string> TickerFilterChanged { get; set; }

    [Parameter]
    public int MaxPrice { get; set; }

    [Parameter]
    public EventCallback<int> MaxPriceChanged { get; set; }

    private IEnumerable<StockDividendDisplay> _stocksToDisplay;

    protected override void OnParametersSet()
    {
        var filter = new StockDividendTableStockFilter(TickerFilter, VisibilitySwitch, MaxPrice);
        _stocksToDisplay = Stocks.Where(filter.ShouldDisplay)
            .Select(StockDividendDisplay.Map);
    }

    private string _displayNone = "display:none";

    private string ShouldShowSpecialDates()
    => ShowSpecialDates ? "" : _displayNone;
}

